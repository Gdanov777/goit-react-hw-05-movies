{"version":3,"file":"static/js/566.4423f994.chunk.js","mappings":"2UAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAa,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACJX,EAAAA,EAAAA,IAAU,8BAADY,OACAX,EAAO,YACrC,KAAD,EAFW,OAEXM,EAAAE,EAAAI,KAFOL,EAAID,EAAJC,KAAIC,EAAAK,OAAA,SAGLN,GAAI,wBAAAC,EAAAM,OAAA,GAAAT,EAAA,KACZ,kBALyB,OAAAH,EAAAa,MAAA,KAAAC,UAAA,KAObC,EAAiB,eAAAC,GAAAf,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAe,EAAMC,GAAK,IAAAC,EAAAd,EAAA,OAAAH,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,cAAAY,EAAAZ,KAAA,EACnBX,EAAAA,EAAAA,IAAU,wBAADY,OACNX,EAAO,WAAAW,OAAUS,IACzC,KAAD,EAFW,OAEXC,EAAAC,EAAAV,KAFOL,EAAIc,EAAJd,KAAIe,EAAAT,OAAA,SAILN,GAAI,wBAAAe,EAAAR,OAAA,GAAAK,EAAA,KACZ,gBAN6BI,GAAA,OAAAL,EAAAH,MAAA,KAAAC,UAAA,KAQjBQ,EAAiB,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAQ,IAAAC,EAAArB,EAAA,OAAAH,IAAAA,MAAA,SAAAyB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACtBX,EAAAA,EAAAA,IAAU,SAADY,OACrBgB,EAAQ,aAAAhB,OAAYX,EAAO,oBACpC,KAAD,EAFW,OAEX4B,EAAAC,EAAAjB,KAFOL,EAAIqB,EAAJrB,KAAIsB,EAAAhB,OAAA,SAILN,GAAI,wBAAAsB,EAAAf,OAAA,GAAAY,EAAA,KACZ,gBAN6BI,GAAA,OAAAL,EAAAV,MAAA,KAAAC,UAAA,KAQjBe,EAAiB,eAAAC,GAAA7B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6B,EAAMC,GAAE,IAAAC,EAAA5B,EAAA,OAAAH,IAAAA,MAAA,SAAAgC,GAAA,cAAAA,EAAA3B,KAAA2B,EAAA1B,MAAA,cAAA0B,EAAA1B,KAAA,EAChBX,EAAAA,EAAAA,IAAU,SAADY,OAAUuB,EAAE,qBAAAvB,OAAoBX,IAAW,KAAD,EAA9D,OAA8DmC,EAAAC,EAAAxB,KAAlEL,EAAI4B,EAAJ5B,KAAI6B,EAAAvB,OAAA,SACLN,GAAI,wBAAA6B,EAAAtB,OAAA,GAAAmB,EAAA,KACZ,gBAH6BI,GAAA,OAAAL,EAAAjB,MAAA,KAAAC,UAAA,KAKjBsB,EAAiB,eAAAC,GAAApC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAoC,EAAMN,GAAE,IAAAO,EAAAlC,EAAA,OAAAH,IAAAA,MAAA,SAAAsC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EAChBX,EAAAA,EAAAA,IAAU,SAADY,OACrBuB,EAAE,qBAAAvB,OAAoBX,EAAO,YACtC,KAAD,EAFW,OAEXyC,EAAAC,EAAA9B,KAFOL,EAAIkC,EAAJlC,KAAImC,EAAA7B,OAAA,SAGLN,GAAI,wBAAAmC,EAAA5B,OAAA,GAAA0B,EAAA,KACZ,gBAL6BG,GAAA,OAAAJ,EAAAxB,MAAA,KAAAC,UAAA,KASvB,SAAS4B,EAAUC,GACxB,OAAKA,EAGG,mCAANlC,OAA0CkC,GAFnC,8EAIX,C,8EChDaC,EAAS,WACpB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACG,EAAAA,GAAY,CACXC,MAAM,UACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAIlB,C,oMCXaC,EAASC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6CAInBC,EAAcH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iD,SCHxBG,EAAY,SAAH3D,GAAoB,IAAd4D,EAAM5D,EAAN4D,OAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,eAAgBC,EACnCH,EADmCG,aAAcC,EACjDJ,EADiDI,SAAUC,EAC3DL,EAD2DK,OAGvDC,EAAWC,KAAKC,MAAqB,GAAfL,GAE5B,OACEM,EAAAA,EAAAA,MAAAvB,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,KAACQ,EAAM,CAAAN,UACLF,EAAAA,EAAAA,KAAA,OAAKyB,KAAK5B,EAAAA,EAAAA,IAAUmB,GAAcU,IAAI,cAExCF,EAAAA,EAAAA,MAACZ,EAAW,CAAAV,SAAA,EACVF,EAAAA,EAAAA,KAAA,MAAAE,SAAKe,KACLO,EAAAA,EAAAA,MAAA,KAAAtB,SAAA,CAAG,eAAamB,EAAS,QACzBrB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,cACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAIiB,KACJnB,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACHkB,EACGA,EAAOO,KAAI,SAACC,EAAOC,GAAK,OAAK7B,EAAAA,EAAAA,KAAA,KAAAE,SAAgB0B,EAAME,MAAdD,EAAuB,IAC5D,+BAIZ,E,UCxBaE,GAAatB,EAAAA,EAAAA,IAAOuB,EAAAA,GAAPvB,CAAYC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iOCCzBsB,EAAa,SAAH9E,GAA0B,IAApB+E,EAAE/E,EAAF+E,GAAIhC,EAAQ/C,EAAR+C,SAC/B,OACEsB,EAAAA,EAAAA,MAACO,EAAU,CAACG,GAAIA,EAAGhC,SAAA,EACjBF,EAAAA,EAAAA,KAACmC,EAAAA,IAAkB,CAACC,KAAK,OACxBlC,IAGP,ECyCA,EA1CqB,WAAO,IAADmC,EAAAC,EACzBC,GAA2BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCxB,EAAM0B,EAAA,GAAEE,EAAQF,EAAA,GACvBG,GAA8BJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAClB1D,GAAO6D,EAAAA,EAAAA,MAAP7D,GAGF8D,EAAmC,QAAvBZ,EAAiB,QAAjBC,GADDY,EAAAA,EAAAA,MACaC,aAAK,IAAAb,OAAA,EAAdA,EAAgBc,YAAI,IAAAf,EAAAA,EAAI,IAiB7C,OAhBAgB,EAAAA,EAAAA,YAAU,WACsB,SAAAC,IAW7B,OAX6BA,GAAAlG,EAAAA,EAAAA,GAAAC,IAAAA,MAA9B,SAAAC,IAAA,IAAAE,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEqB,OAFrBF,EAAAC,KAAA,EAEIqF,GAAW,GAAMtF,EAAAE,KAAA,GACEc,EAAAA,EAAAA,IAAkBU,GAAI,KAAD,EAAlC3B,EAAIC,EAAAI,KAEV8E,EAASnF,GAAMC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAA8F,GAAA9F,EAAA,SAEf+F,EAAAA,GAAAA,MAAY,wBAAwB,QAElB,OAFkB/F,EAAAC,KAAA,GAEpCqF,GAAW,GAAOtF,EAAAgG,OAAA,6BAAAhG,EAAAM,OAAA,GAAAT,EAAA,yBAErBU,MAAA,KAAAC,UAAA,EAZc,WACeqF,EAAAtF,MAAC,KAADC,UAAA,CAY9ByF,EACF,GAAG,CAACvE,KAGFqC,EAAAA,EAAAA,MAAA,OAAAtB,SAAA,CACG4C,IAAW9C,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KACnBC,EAAAA,EAAAA,KAACiC,EAAU,CAACC,GAAIe,EAAa/C,SAAC,aAC5B4C,IAAW9C,EAAAA,EAAAA,KAACc,EAAS,CAACC,OAAQA,KAChCS,EAAAA,EAAAA,MAAA,MAAAtB,SAAA,EACEF,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACE,GAAG,UAAUiB,MAAO,CAAEC,KAAMH,GAAe/C,SAAC,aAGlDF,EAAAA,EAAAA,KAACgC,EAAAA,GAAI,CAACE,GAAG,OAAOiB,MAAO,CAAEC,KAAMH,GAAe/C,SAAC,aAKjDF,EAAAA,EAAAA,KAAC2D,EAAAA,GAAM,MAGb,C","sources":["api.js","components/Loader.jsx","components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/GoBackLink/GoBackLink.styled.js","components/GoBackLink/GoBackLink.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '51152509db377696be1781d05c6af581';\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/';\n\nexport const fetchTrending = async () => {\n  const { data } = await axios.get(\n    `trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const fetchSearchMovies = async value => {\n  const { data } = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${value}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCredits = async id => {\n  const { data } = await axios.get(`movie/${id}/credits?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&page=1`\n  );\n  return data;\n};\n\nexport const getPosterUrl = (path, size) => BASE_POSTER_URL + size + path;\n\nexport function getPoster(poster) {\n  if (!poster) {\n    return 'https://upload.wikimedia.org/wikipedia/commons/6/64/Poster_not_available.jpg';\n  } else {\n    return `https://image.tmdb.org/t/p/w300/${poster}`;\n  }\n}\n","import { FallingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <>\n      <FallingLines\n        color=\"#4fa94d\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </>\n  );\n};","import styled from 'styled-components';\n\nexport const Poster = styled.div`\n  width: 200px;\n  height: 270px;\n`;\nexport const CardWrapper = styled.div`\n  width: 600px;\n  margin-left: 10px;\n`;\n","import { CardWrapper, Poster } from './MovieCard.styled';\nimport { getPoster } from 'api';\n\nexport const MovieCard = ({ movies }) => {\n  const { poster_path, original_title, vote_average, overview, genres } =\n    movies;\n\n  const useCheck = Math.round(vote_average * 10);\n\n  return (\n    <>\n      <Poster>\n        <img src={getPoster(poster_path)} alt=\"poster\" />\n      </Poster>\n      <CardWrapper>\n        <h1>{original_title}</h1>\n        <p>User Check: {useCheck}%</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h2>Genres</h2>\n        {genres\n          ? genres.map((genre, index) => <p key={index}>{genre.name}</p>)\n          : 'Genres is not available'}\n      </CardWrapper>\n    </>\n  );\n};","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n  :hover {\n    color: orangered;\n  }\n`;\n","import { BsFillReplyAllFill } from 'react-icons/bs';\nimport { StyledLink } from './GoBackLink.styled';\n\nexport const GoBackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <BsFillReplyAllFill size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader';\nimport { fetchMovieDetails } from 'api';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { GoBackLink } from 'components/GoBackLink/GoBackLink';\n\nconst MovieDetails = () => {\n  const [movies, setMovie] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const { id } = useParams();\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  useEffect(() => {\n    async function getMovieDetails() {\n      try {\n        setLoading(true);\n        const data = await fetchMovieDetails(id);\n\n        setMovie(data);\n      } catch {\n        toast.error('something went wrong');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetails();\n  }, [id]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <GoBackLink to={backLinkHref}>Go Back</GoBackLink>\n      {!loading && <MovieCard movies={movies} />}\n      <ul>\n        <Link to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </Link>\n        <Link to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </Link>\n      </ul>\n\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;"],"names":["axios","API_KEY","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","fetchSearchMovies","_ref2","_callee2","value","_yield$axios$get2","_context2","_x","fetchMovieDetails","_ref3","_callee3","movie_id","_yield$axios$get3","_context3","_x2","fetchMovieCredits","_ref4","_callee4","id","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4","getPoster","poster","Loader","_jsx","_Fragment","children","FallingLines","color","width","visible","ariaLabel","Poster","styled","_templateObject","_taggedTemplateLiteral","CardWrapper","_templateObject2","MovieCard","movies","poster_path","original_title","vote_average","overview","genres","useCheck","Math","round","_jsxs","src","alt","map","genre","index","name","StyledLink","Link","GoBackLink","to","BsFillReplyAllFill","size","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","loading","setLoading","useParams","backLinkHref","useLocation","state","from","useEffect","_getMovieDetails","t0","toast","finish","getMovieDetails","Outlet"],"sourceRoot":""}